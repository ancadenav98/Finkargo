name: CI/CD Pipeline para app Flask prueba Finkargo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest

    - name: Build Docker image
      run: |
        docker build -t my-flask-app .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Docker image to ECR
      run: |
        docker tag my-flask-app:latest ${{ steps.login-ecr.outputs.registry }}/my-flask-app:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/my-flask-app:latest

    - name: Deploy to ECS
      if: github.ref == 'refs/heads/main'
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
          --service ${{ secrets.ECS_SERVICE_NAME }} \
          --force-new-deployment \
          --container-name my-flask-app-container \ # Ajusta si es necesario
          --image ${{ steps.login-ecr.outputs.registry }}/my-flask-app:latest